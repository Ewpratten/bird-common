
function auto_filter_on_import() {
    # Drop bogons & strip bogon asns
    if is_bogon_prefix() then return false;
    remove_private_asns();
    if bgp_path ~ BAD_ACTOR_ASNS then return false;

    # Reject rpki invalid
    # if !is_rpki_acceptable() then return false;

    # If the peer is not transit, drop all transit routes from them
    if (!is_nexthop_transit()) && (as_path_contains_transit()) then return false;

    # Absolutly do not allow non-transit to give us a default route
    if !is_nexthop_transit() && is_default_route() then return false;

    # Locally blackhole routes that come from blocked countries
    if path_originated_from_blocked_country() then {
        dest = RTD_BLACKHOLE;
    }

    # Do not import routes that pass through blocked countries
    if path_traverses_blocked_country() && !path_originated_from_blocked_country() then return false;

    return true;
}

function auto_filter_on_export(int own_asn; int peer_asn) {
    # Do not export bogons
    if is_bogon_prefix() then return false;

    # If there are no ases in the path, 
    # make sure we are actually allowed to export this route
    if bgp_path.len = 0 then {
        # Drop invalid
        if is_rpki_invalid_for(own_asn) then return false;

        # If there is no ROA, at least enforce max prefix length
        if is_rpki_unknown() && is_prefix_too_long() then return false;
    }

    # Don't export routes that originate from blocked countries
    if path_originated_from_blocked_country() then return false;

    # Respect action communities
    if !is_export_allowed(peer_asn) then return false;
    handle_prepend_communities(peer_asn);

    return true;
}